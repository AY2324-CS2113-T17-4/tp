@startuml
'https://plantuml.com/sequence-diagram

'autonumber
autoactivate on

actor Student

participant ":Ui" as UI
participant ":Module\nInfoView" as MIV


Student -> UI: getUser\nCommand() \n"left"
note bottom
This command
returns the
modules left
to the user
end note

participant "controller:\nMain\nController" as MC #white

UI -> MC: handleUser\nInputTillExit\nCommand()

participant "currentUser\nCommand:\nUserCommand" as UC #white

participant ":ModuleMethods\nController" as MMC


MC -> UC **: create
activate UC
UC --> MC: currentUser\nCommand "left"

MC -> UC: processCommand()

box "Model" #LightBlue
participant "student:\nStudent" as S #white
participant "moduleCodesLeft:\nArrayList<String>" as MCL #white
participant "schedule:\nSchedule" as SCH #white
participant "modules\nPlanned:\nModuleList" as MP #white
participant "completed\nModuleCodes:\nArrayList<String>" as CMC #white
end box



UC -> S: getModuleCodesLeft()


'create moduleCodesLeft
S -> MCL **: create
activate MCL
MCL --> S



'schedule.getModulesPlanned().getCompletedModuleCodes()
S -> SCH: getModulesPlanned()
SCH --> S: modulesPlanned:ModuleList


S -> MP: modulesPlanned\n.getCompletedModuleCodes()
MP --> S: completedModuleCodes:\nArrayList<String>



loop moduleCode

    S -> CMC: completedModuleCodes\n.contains(moduleCode)
    CMC --> S: contains:Boolean

    alt !contains
        'moduleCodesLeft.add(moduleCode)
        S -> MCL: moduleCodesLeft\n.add(moduleCode)
        MCL --> S
    end

end

destroy MCL

S --> UC: "moduleCodesLeft:ArrayList<String>"


UC -> MMC: showModulesLeft\n(ArrayList<String> \nmoduleCodesLeft)

MMC -> UI: displayMessage("Modules Left: ")
UI --> Student
UI --> MMC


MMC -> MIV: printModuleStringArray\n(moduleCodesLeft)
activate MIV
MIV --> Student
MIV --> MMC
deactivate MIV


MMC --> UC

UC --> MC
destroy UC


MC --> UI
UI --> Student



@enduml